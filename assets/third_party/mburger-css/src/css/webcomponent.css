/** Selector for the root */
/** Selector for the button. */
/** Selector for the button with the "collapse" effect. */
/** Selector for the button with the "spin" effect. */
/** Selector for the button with the "squeeze" effect. */
/** Selector for the button with the "tornado" effect. */
/** Selector for the button when the menu is opened. */
/** Selector for the button with the "collapse" effect when the menu is opened. */
/** Selector for the button with the "spin" effect when the menu is opened. */
/** Selector for the button with the "squeeze" effect when the menu is opened. */
/** Selector for the button with the "tornado" effect when the menu is opened. */
/** Timeout before starting the animation, ensures the animation starts after the menu is fully opened. */
/** Whether or not to include the CSS for the "collapse" animation. */
/** Whether or not to include the CSS for the "spin" animation. */
/** Whether or not to include the CSS for the "squeeze" animation. */
/** Whether or not to include the CSS for the "tornado" animation. */
:host {
  /** Size for the button. */
  --mb-button-size: 60px;
  /** Width for the bars, relative to the button. */
  --mb-bar-width: 0.6;
  /** Height for the bars.*/
  --mb-bar-height: 4px;
  /** Distance between bars (approximately). */
  --mb-bar-spacing: 10px;
  /** Timeout before starting the animation, ensures the animation starts after the menu is fully opened. */
  --mb-animate-timeout: 0s; }

:host {
  background: transparent;
  border: none;
  border-radius: 0;
  color: inherit;
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: var(--mb-button-size);
  padding: 0 0 0 var(--mb-button-size);
  margin: 0;
  line-height: var(--mb-button-size);
  vertical-align: middle;
  appearance: none;
  outline: none;
  cursor: pointer; }
  :host b {
    display: block;
    position: absolute;
    left: calc(var(--mb-button-size) * ((1 - var(--mb-bar-width)) / 2));
    width: calc(var(--mb-button-size) * var(--mb-bar-width));
    height: var(--mb-bar-height);
    border-radius: calc(var(--mb-bar-height) / 2);
    background: currentColor;
    color: inherit;
    opacity: 1; }
    :host b:nth-of-type(1) {
      bottom: calc(50% + var(--mb-bar-spacing));
      transition: bottom 0.2s ease, transform 0.2s ease, width 0.2s ease; }
    :host b:nth-of-type(2) {
      top: calc(50% - (var(--mb-bar-height) / 2));
      transition: opacity 0.2s ease; }
    :host b:nth-of-type(3) {
      top: calc(50% + var(--mb-bar-spacing));
      transition: top 0.2s ease, transform 0.2s ease, width 0.2s ease; }

:host([state="cross"]) b:nth-of-type(1) {
  bottom: calc(50% - (var(--mb-bar-height) / 2));
  transform: rotate(45deg); }
:host([state="cross"]) b:nth-of-type(2) {
  opacity: 0; }
:host([state="cross"]) b:nth-of-type(3) {
  top: calc(50% - (var(--mb-bar-height) / 2));
  transform: rotate(-45deg); }

:host([fx="collapse"]) b:nth-of-type(1) {
  transition: bottom 0.2s ease, margin 0.2s ease, transform 0.2s ease;
  transition-delay: 0.2s, 0s, 0s; }
:host([fx="collapse"]) b:nth-of-type(2) {
  transition: top 0.2s ease, opacity 0s ease;
  transition-delay: 0.3s, 0.3s; }
:host([fx="collapse"]) b:nth-of-type(3) {
  transition: top 0.2s ease, transform 0.2s ease; }

:host([state="cross"][fx="collapse"]) b:nth-of-type(1) {
  bottom: calc( 50% - var(--mb-bar-spacing) - var(--mb-bar-height) );
  margin-bottom: calc( var(--mb-bar-spacing) + (var(--mb-bar-height) / 2) );
  transform: rotate(45deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0.1s), calc(var(--mb-animate-timeout) + 0.3s), calc(var(--mb-animate-timeout) + 0.3s); }
:host([state="cross"][fx="collapse"]) b:nth-of-type(2) {
  top: calc(50% + var(--mb-bar-spacing));
  opacity: 0;
  transition-delay: calc(var(--mb-animate-timeout) + 0s), calc(var(--mb-animate-timeout) + 0.2s); }
:host([state="cross"][fx="collapse"]) b:nth-of-type(3) {
  top: calc(50% - (var(--mb-bar-height) / 2));
  transform: rotate(-45deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0.3s), calc(var(--mb-animate-timeout) + 0.3s); }

:host([fx="spin"]) b:nth-of-type(1) {
  transition-delay: 0.2s, 0s; }
:host([fx="spin"]) b:nth-of-type(2) {
  transition-duration: 0s;
  transition-delay: 0.2s; }
:host([fx="spin"]) b:nth-of-type(3) {
  transition-delay: 0.2s, 0s; }

:host([state="cross"][fx="spin"]) b:nth-of-type(1) {
  transform: rotate(135deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0s), calc(var(--mb-animate-timeout) + 0.2s); }
:host([state="cross"][fx="spin"]) b:nth-of-type(2) {
  transition-delay: calc(var(--mb-animate-timeout) + 0s); }
:host([state="cross"][fx="spin"]) b:nth-of-type(3) {
  transform: rotate(225deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0s), calc(var(--mb-animate-timeout) + 0.2s); }

:host([fx="squeeze"]) b:nth-of-type(1) {
  transition-delay: 0.1s, 0s; }
:host([fx="squeeze"]) b:nth-of-type(2) {
  transition-delay: 0.1s; }
:host([fx="squeeze"]) b:nth-of-type(3) {
  transition-delay: 0.1s, 0s; }

:host([state="cross"][fx="squeeze"]) b:nth-of-type(1) {
  transition-delay: calc(var(--mb-animate-timeout) + 0s), calc(var(--mb-animate-timeout) + 0.1s); }
:host([state="cross"][fx="squeeze"]) b:nth-of-type(2) {
  transition-delay: calc(var(--mb-animate-timeout) + 0s); }
:host([state="cross"][fx="squeeze"]) b:nth-of-type(3) {
  transition-delay: calc(var(--mb-animate-timeout) + 0s), calc(var(--mb-animate-timeout) + 0.1s); }

:host([fx="tornado"]) b:nth-of-type(1) {
  transition: bottom 0.2s ease, transform 0.2s ease;
  transition-delay: 0.2s; }
:host([fx="tornado"]) b:nth-of-type(2) {
  transition: opacity 0s ease, transform 0.2s ease;
  transition-delay: 0.1s, 0.1s; }
:host([fx="tornado"]) b:nth-of-type(3) {
  transition: top 0.2s ease, transform 0.2s ease;
  transition-delay: 0s; }

:host([state="cross"][fx="tornado"]) b:nth-of-type(1) {
  transform: rotate(-135deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0s); }
:host([state="cross"][fx="tornado"]) b:nth-of-type(2) {
  opacity: 0;
  transform: rotate(-135deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0.4s), calc(var(--mb-animate-timeout) + 0.1s); }
:host([state="cross"][fx="tornado"]) b:nth-of-type(3) {
  transform: rotate(-225deg);
  transition-delay: calc(var(--mb-animate-timeout) + 0.2s); }

/*# sourceMappingURL=webcomponent.css.map */
